name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.147.9
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
          # 민감한 정보는 GitHub Secrets에서 가져옴
          HUGO_PARAMS_ANALYTICS_GOOGLE_GTAGID: ${{ secrets.GA_MEASUREMENT_ID }}
          HUGO_PARAMS_ADSENSE_CLIENT_ID: ${{ secrets.HUGO_PARAMS_ADSENSE_CLIENT_ID }}
          HUGO_PARAMS_ADSENSE_CONTENT_AD_SLOT: ${{ secrets.ADSENSE_CONTENT_AD_SLOT }}
          HUGO_PARAMS_ADSENSE_SIDEBAR_AD_SLOT: ${{ secrets.ADSENSE_SIDEBAR_AD_SLOT }}
        run: |
          # 환경변수 디버깅 (민감한 정보는 마스킹)
          echo "🔍 환경변수 디버깅 시작..."
          echo "GA_MEASUREMENT_ID 설정됨: ${{ secrets.GA_MEASUREMENT_ID != '' }}"
          echo "ADSENSE_CLIENT_ID 설정됨: ${{ secrets.HUGO_PARAMS_ADSENSE_CLIENT_ID != '' }}"
          echo "ADSENSE_CONTENT_AD_SLOT 설정됨: ${{ secrets.ADSENSE_CONTENT_AD_SLOT != '' }}"
          echo "ADSENSE_SIDEBAR_AD_SLOT 설정됨: ${{ secrets.ADSENSE_SIDEBAR_AD_SLOT != '' }}"

          # Hugo 환경변수 매핑 확인
          echo "🔍 Hugo 환경변수 매핑 확인..."
          echo "HUGO_PARAMS_ANALYTICS_GOOGLE_GTAGID: $HUGO_PARAMS_ANALYTICS_GOOGLE_GTAGID"
          echo "HUGO_PARAMS_ADSENSE_CLIENT_ID: $HUGO_PARAMS_ADSENSE_CLIENT_ID"

          # Hugo 설정 확인
          echo "🔍 Hugo 설정 확인..."
          hugo config

          # hugo.toml에 환경변수 값 직접 설정
          echo "🔧 hugo.toml에 환경변수 값 설정..."
          if [ -n "$HUGO_PARAMS_ANALYTICS_GOOGLE_GTAGID" ]; then
            sed -i "s/gtagID = \"\"/gtagID = \"$HUGO_PARAMS_ANALYTICS_GOOGLE_GTAGID\"/" hugo.toml
            echo "✅ GA gtagID 설정됨"
          fi

          if [ -n "$HUGO_PARAMS_ADSENSE_CLIENT_ID" ]; then
            sed -i "s/clientID = \"\"/clientID = \"$HUGO_PARAMS_ADSENSE_CLIENT_ID\"/" hugo.toml
            echo "✅ AdSense clientID 설정됨"
          fi

          # Hugo 빌드
          echo "🚀 Hugo 빌드 시작..."
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

          echo "✅ Hugo 빌드 완료"

          # 빌드된 HTML에서 GA/AdSense 코드 확인
          echo "🔍 빌드된 HTML에서 분석 코드 확인..."
          if grep -q "gtag" ./public/index.html; then
            echo "✅ Google Analytics 코드가 HTML에 포함됨"
          else
            echo "❌ Google Analytics 코드가 HTML에 없음"
          fi

          if grep -q "adsbygoogle" ./public/index.html; then
            echo "✅ Google AdSense 코드가 HTML에 포함됨"
          else
            echo "❌ Google AdSense 코드가 HTML에 없음"
          fi

          # 환경변수 값 확인 (마스킹 처리)
          echo "🔍 환경변수 값 확인 (마스킹됨):"
          if [ -n "$HUGO_PARAMS_ANALYTICS_GOOGLE_GTAGID" ]; then
            echo "GA ID: ${HUGO_PARAMS_ANALYTICS_GOOGLE_GTAGID:0:4}****"
          else
            echo "GA ID: 설정되지 않음"
          fi

          if [ -n "$HUGO_PARAMS_ADSENSE_CLIENT_ID" ]; then
            echo "AdSense ID: ${HUGO_PARAMS_ADSENSE_CLIENT_ID:0:8}****"
          else
            echo "AdSense ID: 설정되지 않음"
          fi
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4